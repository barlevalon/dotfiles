#!/usr/bin/env bash

# Enhanced keybindings display with human-readable descriptions
# Uses hyprctl to get dynamic bindings with descriptions

# Fetch dynamic keybindings from Hyprland
# Map numeric modifier key mask to textual representation
dynamic_bindings() {
  hyprctl -j binds 2>/dev/null | \
    jq -r '.[] | {modmask, key, keycode, description, dispatcher, arg} | "\(.modmask),\(.key)@\(.keycode),\(.description),\(.dispatcher),\(.arg)"' | \
    sed -r \
        -e 's/null//' \
        -e 's/@0//' \
        -e 's/,@/,code:/' \
        -e 's/^0,/,/' \
        -e 's/^1,/SHIFT,/' \
        -e 's/^4,/CTRL,/' \
        -e 's/^5,/SHIFT CTRL,/' \
        -e 's/^8,/ALT,/' \
        -e 's/^9,/SHIFT ALT,/' \
        -e 's/^12,/CTRL ALT,/' \
        -e 's/^13,/SHIFT CTRL ALT,/' \
        -e 's/^64,/SUPER,/' \
        -e 's/^65,/SUPER SHIFT,/' \
        -e 's/^68,/SUPER CTRL,/' \
        -e 's/^69,/SUPER SHIFT CTRL,/' \
        -e 's/^72,/SUPER ALT,/' \
        -e 's/^73,/SUPER SHIFT ALT,/' \
        -e 's/^76,/SUPER CTRL ALT,/' \
        -e 's/^77,/SUPER SHIFT CTRL ALT,/'
}

# Parse and format keybindings with descriptions
parse_bindings() {
  awk -F, '
{
    # Combine the modifier and key (first two fields)
    key_combo = $1 " + " $2;

    # Clean up: strip leading "+" if present, trim spaces
    gsub(/^[ \t]*\+?[ \t]*/, "", key_combo);
    gsub(/[ \t]+$/, "", key_combo);
    gsub(/[ \t]+/, " ", key_combo);  # Collapse multiple spaces to one

    # Use description if available, otherwise use the command
    action = $3;
    
    if (action == "") {
        # Reconstruct the command from the remaining fields
        for (i = 4; i <= NF; i++) {
            action = action $i (i < NF ? "," : "");
        }

        # Clean up trailing commas, remove leading "exec, ", and trim
        sub(/,$/, "", action);
        gsub(/(^|,)[[:space:]]*exec[[:space:]]*,?/, "", action);
        gsub(/^[ \t]+|[ \t]+$/, "", action);
    }

    if (action != "") {
        printf "%-35s â†’ %s\n", key_combo, action;
    }
}'
}

# Show keybindings in wofi
if command -v wofi &> /dev/null; then
    dynamic_bindings | \
      sort -u | \
      parse_bindings | \
      ~/.config/hypr/scripts/wofi-launcher --dmenu --prompt "Hyprland Keybindings" --width 60% --height 70%
else
    # Fallback to terminal output
    echo "=== Hyprland Keybindings ==="
    dynamic_bindings | sort -u | parse_bindings
    echo ""
    echo "Press any key to exit..."
    read -n 1
fi