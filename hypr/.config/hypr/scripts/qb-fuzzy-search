#!/bin/bash

# Check if our specific wofi instance is running
if pgrep -f "wofi.*Qutebrowser" > /dev/null; then
    # Our qb-fuzzy-search wofi is running, kill it (toggle off)
    pkill -x wofi
    exit 0
fi

# Kill any other wofi instance that might be running
pkill -x wofi 2>/dev/null

# Temporary file for entries
TEMP_FILE=$(mktemp)
trap "rm -f $TEMP_FILE" EXIT

# Fixed session file location
SESSION_FILE="/tmp/qb-fuzzy-search-session.yml"

# Save current session if qutebrowser is running
if pgrep -x qutebrowser > /dev/null; then
    qutebrowser ":session-save --quiet $SESSION_FILE" 2>/dev/null
    
    # Parse session file for open tabs
    if [ -f "$SESSION_FILE" ]; then
        # Parse with yq (go version)
        yq eval '.windows[].tabs[] as $tab | 
            $tab.history[] | 
            select(.active == true and .url != null and .url != "about:blank") | 
            (select($tab.active) | "[TAB*] " + (.title // .url) + " - " + .url) // 
            (select($tab.active | not) | "[TAB] " + (.title // .url) + " - " + .url)' "$SESSION_FILE" >> "$TEMP_FILE" 2>/dev/null
    fi
fi

# Add quickmarks if file exists
if [ -f ~/.config/qutebrowser/quickmarks ]; then
    while IFS=' ' read -r name url; do
        echo "[QM] $name - $url" >> "$TEMP_FILE"
    done < ~/.config/qutebrowser/quickmarks
fi

# Add bookmarks if file exists
if [ -f ~/.config/qutebrowser/bookmarks ]; then
    while IFS=' ' read -r url title; do
        # Bookmarks format is "url title"
        # Add https:// if no protocol specified
        if [[ ! "$url" =~ ^https?:// && ! "$url" =~ ^file:// && ! "$url" =~ ^about: ]]; then
            url="https://$url"
        fi
        echo "[BM] ${title:-$url} - $url" >> "$TEMP_FILE"
    done < ~/.config/qutebrowser/bookmarks
fi

# Add history from SQLite database
if [ -f ~/.local/share/qutebrowser/history.sqlite ]; then
    # Get last 500 unique URLs from history, ordered by most recent
    sqlite3 ~/.local/share/qutebrowser/history.sqlite \
        "SELECT DISTINCT url, title FROM CompletionHistory ORDER BY last_atime DESC LIMIT 500" \
        | while IFS='|' read -r url title; do
            # Skip empty URLs
            [ -z "$url" ] && continue
            # Use URL as title if title is empty
            echo "[H] ${title:-$url} - $url" >> "$TEMP_FILE"
        done
fi

# Check if we have any entries
if [ ! -s "$TEMP_FILE" ]; then
    notify-send "QB Fuzzy Search" "No bookmarks, quickmarks, or history found"
    exit 1
fi

# Use wofi to select an entry
SELECTED=$(cat "$TEMP_FILE" | wofi --dmenu --prompt "Qutebrowser" --cache-file /dev/null)

# Exit if nothing selected
[ -z "$SELECTED" ] && exit 0

# Check what type of entry was selected
if [[ "$SELECTED" =~ ^\[TAB\*?\] ]]; then
    # This is an open tab - extract URL and focus it
    URL=$(echo "$SELECTED" | sed 's/.* - //')
    
    # Use tab-select with URL pattern to focus the tab
    qutebrowser ":tab-select $URL"
    
elif [[ "$SELECTED" =~ ^\[QM\] ]]; then
    # Extract quickmark name (between [QM] and -)
    QM_NAME=$(echo "$SELECTED" | sed 's/^\[QM\] \([^ ]*\) - .*/\1/')
    
    # Open quickmark in qutebrowser
    if pgrep -x qutebrowser > /dev/null; then
        # Qutebrowser is running, use quickmark-load in new tab
        qutebrowser ":quickmark-load -t $QM_NAME"
    else
        # Qutebrowser not running, start it with the quickmark URL directly
        # First get the URL from quickmarks file
        QM_URL=$(grep "^$QM_NAME " ~/.config/qutebrowser/quickmarks | cut -d' ' -f2-)
        if [ -n "$QM_URL" ]; then
            # Add protocol if missing
            [[ ! "$QM_URL" =~ ^https?:// ]] && QM_URL="https://$QM_URL"
            qutebrowser "$QM_URL"
        else
            # Fallback if URL not found
            qutebrowser
        fi
    fi
else
    # Not a quickmark or tab, extract URL normally
    URL=$(echo "$SELECTED" | sed 's/.* - //')
    
    # Check if URL is valid
    if [ -z "$URL" ] || [[ ! "$URL" =~ ^https?:// && ! "$URL" =~ ^file:// && ! "$URL" =~ ^about: ]]; then
        notify-send "QB Fuzzy Search" "Invalid URL: $URL"
        exit 1
    fi
    
    # Open URL in qutebrowser
    if pgrep -x qutebrowser > /dev/null; then
        # Qutebrowser is running, open in new tab
        qutebrowser ":open -t $URL"
    else
        # Qutebrowser not running, start it with URL
        qutebrowser "$URL"
    fi
fi